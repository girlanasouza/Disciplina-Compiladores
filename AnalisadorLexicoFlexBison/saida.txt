TOKEN           LEXEMA         
Token: KW_INT          Lexema: int
Token: TK_IDENTIFIER   Lexema: var
Token: OPERATOR_ATRIB  Lexema: =
Token: LIT_INT         Lexema: 10
Token: SG_SEMICOLON    Lexema: ;
Token: KW_INT          Lexema: int
Token: TK_IDENTIFIER   Lexema: somar
Token: 40                Lexema: (
Token: KW_INT          Lexema: int
Token: TK_IDENTIFIER   Lexema: a
Token: 44                Lexema: ,
Token: KW_INT          Lexema: int
Token: TK_IDENTIFIER   Lexema: b
Token: 41                Lexema: )
Token: 123               Lexema: {
Token: KW_RETURN       Lexema: return
Token: TK_IDENTIFIER   Lexema: a
Token: 43                Lexema: +
Token: TK_IDENTIFIER   Lexema: b
Token: SG_SEMICOLON    Lexema: ;
Token: 125               Lexema: }
Token: KW_INT          Lexema: int
Token: TK_IDENTIFIER   Lexema: main
Token: 40                Lexema: (
Token: 41                Lexema: )
Token: 123               Lexema: {
Token: KW_REAL         Lexema: real
Token: TK_IDENTIFIER   Lexema: x
Token: SG_SEMICOLON    Lexema: ;
Token: KW_INT          Lexema: int
Token: TK_IDENTIFIER   Lexema: var
Token: SG_SEMICOLON    Lexema: ;
Token: KW_CHAR         Lexema: char
Token: TK_IDENTIFIER   Lexema: qualquer
Token: SG_SEMICOLON    Lexema: ;
Token: KW_INT          Lexema: int
Token: TK_IDENTIFIER   Lexema: vator
Token: 91                Lexema: [
Token: LIT_INT         Lexema: 3
Token: 93                Lexema: ]
Token: OPERATOR_ATRIB  Lexema: =
Token: 123               Lexema: {
Token: LIT_INT         Lexema: 10
Token: LIT_INT         Lexema: 2
Token: LIT_INT         Lexema: 3
Token: 125               Lexema: }
Token: SG_SEMICOLON    Lexema: ;
Token: KW_INT          Lexema: int
Token: TK_IDENTIFIER   Lexema: resultadoSoma
Token: OPERATOR_ATRIB  Lexema: =
Token: TK_IDENTIFIER   Lexema: somar
Token: 40                Lexema: (
Token: LIT_INT         Lexema: 5
Token: 44                Lexema: ,
Token: LIT_INT         Lexema: 3
Token: 41                Lexema: )
Token: SG_SEMICOLON    Lexema: ;
Token: TK_IDENTIFIER   Lexema: x
Token: OPERATOR_ATRIB  Lexema: =
Token: LIT_REAL        Lexema: 10.5
Token: SG_SEMICOLON    Lexema: ;
Token: KW_INPUT        Lexema: input
Token: 40                Lexema: (
Token: KW_INT          Lexema: int
Token: 41                Lexema: )
Token: SG_SEMICOLON    Lexema: ;
Token: KW_IF           Lexema: if
Token: 40                Lexema: (
Token: TK_IDENTIFIER   Lexema: x
Token: OPERATOR_GE     Lexema: >=
Token: LIT_INT         Lexema: 5
Token: 41                Lexema: )
Token: 123               Lexema: {
Token: TK_IDENTIFIER   Lexema: qualquer
Token: OPERATOR_ATRIB  Lexema: =
Token: LIT_CHAR        Lexema: 'a'
Token: SG_SEMICOLON    Lexema: ;
Token: KW_OUTPUT       Lexema: output
Token: 40                Lexema: (
Token: LIT_STRING      Lexema: "x is greater than or equal to 5\n"
Token: 44                Lexema: ,
Token: LIT_STRING      Lexema: "ola"
Token: 41                Lexema: )
Token: SG_SEMICOLON    Lexema: ;
Token: 125               Lexema: }
Token: KW_ELSE         Lexema: else
Token: 123               Lexema: {
Token: KW_OUTPUT       Lexema: output
Token: 40                Lexema: (
Token: LIT_STRING      Lexema: "x is less than 5\n"
Token: 41                Lexema: )
Token: SG_SEMICOLON    Lexema: ;
Token: 125               Lexema: }
Token: KW_LOOP         Lexema: while
Token: 40                Lexema: (
Token: TK_IDENTIFIER   Lexema: x
Token: OPERATOR_DIF    Lexema: !=
Token: LIT_INT         Lexema: 0
Token: 41                Lexema: )
Token: 123               Lexema: {
Token: TK_IDENTIFIER   Lexema: x
Token: OPERATOR_ATRIB  Lexema: =
Token: TK_IDENTIFIER   Lexema: x
Token: 45                Lexema: -
Token: LIT_INT         Lexema: 1
Token: SG_SEMICOLON    Lexema: ;
Token: 125               Lexema: }
Token: KW_IF           Lexema: if
Token: 40                Lexema: (
Token: TK_IDENTIFIER   Lexema: x
Token: 62                Lexema: >
Token: LIT_INT         Lexema: 10
Token: 41                Lexema: )
Token: KW_LOOP         Lexema: while
Token: 40                Lexema: (
Token: LIT_INT         Lexema: 10
Token: 41                Lexema: )
Token: TK_IDENTIFIER   Lexema: faz_algo
Token: 40                Lexema: (
Token: 41                Lexema: )
Token: SG_SEMICOLON    Lexema: ;
Token: KW_RETURN       Lexema: return
Token: LIT_INT         Lexema: 0
Token: SG_SEMICOLON    Lexema: ;
Token: 125               Lexema: }
